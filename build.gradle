plugins {
    id 'groovy'
}

repositories {
    jcenter()
}

dependencies {
    // common
    implementation 'org.codehaus.groovy:groovy-all:2.5.10'
    implementation 'com.google.guava:guava:29.0-jre'

    // scrape
    implementation 'org.gebish:geb-core:3.4'
    implementation 'org.seleniumhq.selenium:selenium-firefox-driver:3.141.59'
    implementation 'org.seleniumhq.selenium:selenium-support:3.141.59'

    // upload
    implementation 'com.google.oauth-client:google-oauth-client:1.30.6'
    implementation 'com.google.oauth-client:google-oauth-client-java6:1.30.6'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.30.6'
    implementation 'com.google.api-client:google-api-client:1.30.9'
    implementation 'com.google.photos.library:google-photos-library-client:1.5.0'
}

task scrape(type: JavaExec) {
    main = 'Scrape'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'webdriver.gecko.driver', '/usr/local/Cellar/geckodriver/0.26.0/bin/geckodriver'
    systemProperty 'geb.driver', 'firefox'
    args = [
        './data/scheme-urls.txt'
    ]
}

task upload(type: JavaExec) {
    main = 'Upload'
    classpath = sourceSets.main.runtimeClasspath
    args = [
        './build',
        './local/client_secret.json',
        './local/pile',
        'false',
        'create'
    ]
}

task analyze(type: JavaExec) {
    main = 'Analyze'
    classpath = sourceSets.main.runtimeClasspath
    args = [
        './build/traces',
        './build/downloads'
    ]
}

